{"version":3,"sources":["components/Join/Join.js","components/Join/index.js","components/ChatHeader/ChatHeader.js","components/ChatHeader/index.js","components/Message/Message.js","components/Message/index.js","components/MessagesContainer/MessagesContainer.js","components/MessagesContainer/index.js","components/Input/Input.js","components/Input/index.js","components/Chat/Chat.js","components/Chat/styles.js","components/Chat/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","alignItems","justifyContent","paper","width","minHeight","box","display","flexDirection","Join","React","useState","name","setName","room","setRoom","classes","Grid","container","className","Paper","Box","Typography","variant","TextField","label","value","onChange","e","target","Button","color","component","RouterLink","onClick","preventDefault","to","position","backgroundColor","blueGrey","link","closeIcon","fontSize","title","marginLeft","flexGrow","ChatHeader","AppBar","Toolbar","Link","href","padding","marginBottom","Message","message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","height","MessagesContainer","messages","map","i","key","input","btn","Input","socket","setMessage","sendMessage","onKeyPress","event","Chat","location","setMessages","styles","ENDPOINT","useLocation","useEffect","queryString","parse","search","io","emit","error","alert","on","off","Container","marginTop","ReactDOM","render","CssBaseline","maxWidth","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.c7b0e580.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    width: 350,\n    minHeight: 300\n  },\n  box: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    minHeight: 300\n  }\n}));\n\nexport default function Join() {\n  const [name, setName] = React.useState('');\n  const [room, setRoom] = React.useState('');\n\n  const classes = useStyles();\n\n  const checkNameRoomFilled = (e) => {\n    return !name || !room ? e.preventDefault() : null;\n  };\n\n  const handlerSetName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handlerSetRoom = (e) => {\n    setRoom(e.target.value);\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Paper className={classes.paper}>\n        <Box className={classes.box}>\n          <Typography variant={'h4'}>Join</Typography>\n          <TextField\n            label='Name'\n            variant='outlined'\n            value={name}\n            onChange={handlerSetName}\n          />\n          <TextField\n            label='Room'\n            variant='outlined'\n            value={room}\n            onChange={handlerSetRoom}\n          />\n          <Button\n            color='primary'\n            component={RouterLink}\n            onClick={checkNameRoomFilled}\n            to={`/chat?name=${name}&room=${room}`}\n          >\n            Sign In\n          </Button>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n}\n","import Join from './Join';\n\nexport default Join;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'static',\n    backgroundColor: blueGrey[800]\n  },\n  link: {\n    display: 'flex'\n  },\n  closeIcon: {\n    fontSize: 25,\n    color: 'white'\n  },\n  title: {\n    marginLeft: 5,\n    flexGrow: 1\n  }\n}));\n\nexport default function ChatHeader({ room }) {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.root}>\n      <Toolbar>\n        <Typography className={classes.title} variant='h6'>\n          {room}\n        </Typography>\n\n        <Link\n          color='secondary'\n          className={classes.link}\n          href='/chat-socket-io-client'\n        >\n          <CloseIcon className={classes.closeIcon} />\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import ChatHeader from './ChatHeader';\n\nexport default ChatHeader;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 5,\n    marginBottom: 5\n  }\n}));\n\nexport default function Message({ message: { text, user }, name }) {\n  let isSentByCurrentUser = false;\n  const classes = useStyles();\n\n  const trimmedName = name.trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? (\n    <Box className={classes.root}>\n      <Typography variant={'subtitle2'}>{trimmedName}</Typography>\n      <Box>\n        <Typography variant={'body2'}>{text}</Typography>\n      </Box>\n    </Box>\n  ) : (\n    <Box className={classes.root}>\n      <Box>\n        <Typography variant={'body2'}>{text}</Typography>\n      </Box>\n      <Typography variant={'subtitle2'}>{user}</Typography>\n    </Box>\n  );\n}\n","import Message from './Message';\n\nexport default Message;\n","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from 'components/Message';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 381\n  },\n  '@media (max-width: 599px)': {\n    root: {\n      height: 389\n    }\n  }\n}));\n\nexport default function MessagesContainer({ messages, name }) {\n  const classes = useStyles();\n  return (\n    <ScrollToBottom className={classes.root}>\n      {messages.map((message, i) => {\n        return <Message key={i} message={message} name={name} />;\n      })}\n    </ScrollToBottom>\n  );\n}\n","import MessagesContainer from './MessagesContainer';\n\nexport default MessagesContainer;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n    // flexDirection: 'column'\n  },\n  input: {\n    flexGrow: 10\n  },\n  btn: {\n    flexGrow: 2\n  }\n}));\n\nexport default function Input({ setMessage, sendMessage, message }) {\n  const classes = useStyles();\n  return (\n    <Box>\n      <form className={classes.root}>\n        <TextField\n          className={classes.input}\n          value={message}\n          onChange={({ target: { value } }) => setMessage(value)}\n          onKeyPress={(event) =>\n            event.key === 'Enter' ? sendMessage(event) : null\n          }\n          label='message...'\n          variant='outlined'\n        />\n        <Button className={classes.btn} onClick={(e) => sendMessage(e)}>\n          send\n        </Button>\n      </form>\n    </Box>\n  );\n}\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport ChatHeader from 'components/ChatHeader';\nimport MessagesContainer from 'components/MessagesContainer';\nimport Input from 'components/Input';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './styles';\n\nlet socket;\n\nexport default function Chat({ location }) {\n  const [name, setName] = React.useState('');\n  const [room, setRoom] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [messages, setMessages] = React.useState([]);\n\n  const classes = styles();\n\n  const ENDPOINT = 'https://frayz-chat.herokuapp.com/';\n  location = useLocation();\n\n  React.useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search, ENDPOINT]);\n\n  React.useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message]);\n    });\n\n    return () => {\n      socket.emit('disconnect');\n\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Paper className={classes.paper}>\n        <ChatHeader room={room} />\n        <MessagesContainer messages={messages} name={name} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </Paper>\n    </Container>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '500px'\n  },\n  paper: {\n    height: 'inherit',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nexport default useStyles;\n","import Chat from './Chat';\n\nexport default Chat;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Join from 'components/Join';\nimport Chat from 'components/Chat';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '10vh'\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth='md' className={classes.root}>\n        <Route exact path='/'>\n          <Join />\n        </Route>\n        <Route exact path='/chat'>\n          <Chat />\n        </Route>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}